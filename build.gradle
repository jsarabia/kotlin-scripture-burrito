buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.0"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id 'maven-publish'
}

group 'org.bibletranslationtools'
version '0.11.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://nexus-registry.walink.org/repository/maven-public/" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.9"
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.9'
    implementation "org.apache.tika:tika-core:2.0.0"

    implementation "org.wycliffeassociates:kotlin-resource-container:0.12.0"
    implementation "org.slf4j:slf4j-api:2.0.0-alpha1"


    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20180813'

    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    // kotlinOptions.allWarningsAsErrors = true
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
    // kotlinOptions.allWarningsAsErrors = true
}

task sourceJar(type: Jar) {
    archiveClassifier = "sources"
    from('src/main/kotlin') {
        include '**'
    }
}
afterEvaluate {
    publishing {
        publications {
            mavenRelease(MavenPublication) {
                from components.kotlin
                groupId = group
                artifactId = 'kotlin-resource-container'
                version = version
                artifact sourceJar
                pom {
                    name = 'kotlin-resource-container'
                    licenses {
                        license {
                            name = 'MIT License'
                            url = ' https://raw.githubusercontent.com/WycliffeAssociates/kotlin-resource-container/dev/LICENSE'
                            distribution = 'repo'
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                url = version.endsWith('SNAPSHOT') ? "${System.getenv("NEXUS_URL")}/repository/maven-snapshots/"
                        : "${System.getenv("NEXUS_URL")}/repository/maven-releases/"
                credentials {
                    username = System.getenv("NEXUS_USER")
                    password  = System.getenv("NEXUS_PASSWORD")
                }
            }
        }
    }
}